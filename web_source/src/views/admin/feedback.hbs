<link rel='stylesheet prefetch' href='https://netdna.bootstrapcdn.com/font-awesome/3.2.1/css/font-awesome.css'>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
<style>
    .container {
        display: flex;
        align-items: center;
        height: 40vh;
    }

    .circle {
        margin-top: 20px;
        width: 150px;
        height: 150px;
        background-color: #33A0F2;
        border-radius: 50%;
        display: flex;
        justify-content: center;
        align-items: center;
        color: white;
        font-weight: bold;
        font-size: 28px;
    }          

    .number {
        margin-left: 10px;
        font-size: 48px;
    }

    .total {
        margin-left: 10px;
        font-size: 24px;
    }

    .total-star .checked-star {
        margin-top: 10px;
        color: #FFD600;
        font-size: 32px;
        float: left;
        padding: 0 5px;
    }

    .total-star .unchecked-star {
        margin-top: 10px;
        color: #000;
        font-size: 32px;
        float: left;
        padding: 0 5px;
    }

    .filer {
        display: flex;
    }

    .filter-item {
        width: 140px;
        float: left;
        margin-right: 10px;
        margin-bottom: 5px;
    }
    
    .filter-item label{
        font-size: 12px;
        margin-bottom: -3px;
    }

    .feedback-item {
        margin-bottom: 50px;
    }

    .feedback-item .feedback-text {
        width: 100%;
        border-radius: 10px;
        background-color: #EFEFEF;
        height: 80px;
        padding: 10px;
    }

    .col1-row1-fb {
        height: 50px;
    }

    .fixedStars .checked-star {
        margin-top: 10px;
        color: #FFD600;
        font-size: 15px;
        float: left;
        padding: 0 2px;
    }

    .fixedStars .unchecked-star {
        margin-top: 10px;
        color: #000;
        font-size: 15px;
        float: left;
        padding: 0 2px;
    }


    .list-feedback .avatar {
        width: auto;
        height: 50px;
        margin: -1px;
    }

    .list-feedback p {
        background-color: #E6E0E9;
        border-radius: 10px;
        padding: 5px 5px;
        width: 50%;
        margin: 5px 10% 0;
        text-align: center;
    }

    .date-time-feedback {
        font-size: 12px;
        text-align: right;
        padding-top: 12px;
    }
    
    .view-feedback {
        width: 100%;
        text-align: center;
        margin-top: 40%;
    }

    .more-btn {
        width: 100%;
    }
</style>
<div class="container container-fluid">
    <div class="col-lg-4"></div>
    <div class="circle col-lg-4" style="
                font-weight: 700; 
                color: white;
                text-shadow: 3px 0 #0075FF, -3px 0 #0075FF, 0 3px #0075FF, 0 -3px #0075FF, 3px 3px #0075FF, -3px -3px #0075FF, 3px -3px #0075FF, -3px 3px #0075FF, 6px 6px #00000040;
            ">MYPW</div>
    <div class="number-container col-lg-8">
        <div class="number">{{averageStar}}</div>
        <div class="total">&#127939; total: {{feedbackCount}}</div>
        <div class="total-star">
            <div class="checked-star">&#9733</div>
            <div class="checked-star">&#9733</div>
            <div class="checked-star">&#9733</div>
            <div class="checked-star">&#9733</div>
            <div class="unchecked-star">&#9734</div>
        </div>
    </div>
</div> 
<div class="feedback-container list-group">
    <div class="filter row">
        <form action="">
            <div class="filter-item">
                <label for="inputFrom" class="form-label">From</label>
                <input type="date" class="form-control" id="inputFrom">
            </div>
            <div class="filter-item">
                <label for="inputTo" class="form-label">To</label>
                <input type="date" class="form-control" id="inputTo">
            </div>
            <div class="filter-item">
                <label for="inputUsername" class="form-label">Username</label>
                <input type="text" class="form-control" id="inputUsername">
            </div>
            <div class="filter-item">
                <label for="inputUsername" class="form-label">Star</label>
                <select class="form-select" aria-label="Default select example" id="inputStar">
                    <option selected value="0">All stars</option>
                    <option value="1">1 Star</option>
                    <option value="2">2 Star</option>
                    <option value="3">3 Star</option>
                    <option value="4">4 Star</option>
                    <option value="5">5 Star</option>
                </select>
            </div>
            <div class="filter-item">
                <label for="inputUsername" class="form-label">Option</label>
                <select class="form-select filter-item" aria-label="Default select example">
                    <option selected>Select</option>
                    <option value="1">Newest</option>
                    <option value="2">Not seen</option>
                    <option value="3">Not replied</option>
                </select>
            </div>
        </form>
    </div>
    <div class="list-feedback mt-3">
        {{#each feedbackItems}}
        <div class="row feedback-item">
            <div class="col-lg-10">
                <div class="col1-row1-fb row container-fluid">
                    <div class="col-lg-1">
                        <img src="https://img.hoidap247.com/picture/question/20210531/large_1622431721191.jpg?v=0" alt="Avatar" class="avatar circle">
                    </div>
                    <div class="username-feedback col-lg-6">
                        <p>{{username}}</p>
                    </div>
                    <div class="date-time-feedback col-lg-3">{{time}}</div>
                    <div class="fixedStars col-lg-2">
                        {{#each stars}}
                            {{#if this}}
                                <div class="checked-star">&#9733</div>
                            {{else}}
                                <div class="unchecked-star">&#9734</div>
                            {{/if}}
                        {{/each}}
                    </div>
                </div>
                <textarea class="feedback-text mt-2" id="floatingTextareaDisabled" disabled="disabled">
                    {{Description}}
                </textarea>
            </div>
            <div class="col-lg-2">
            <button type="button" class="view-feedback btn btn-primary" onclick="viewFeedback()">
                View
            </button>
            </div>
        </div>
        {{/each}}
        <button type="button" class="more-btn btn btn-primary" onclick="moreFeedback()">
            More feedback
        </button>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const filterFeedbacks = function () {
            const fromValue = document.getElementById('inputFrom').value;
            const toValue = document.getElementById('inputTo').value;
            const usernameValue = document.getElementById('inputUsername').value.toLowerCase();
            const starValue = document.getElementById('inputStar').value;

            const userItems = document.querySelectorAll('.feedback-item');

            userItems.forEach(function (item) {
                const username = item.querySelector('.username-feedback').textContent.toLowerCase();

                const feedbackDate = item.querySelector('.date-time-feedback').textContent;
                const feedbackDateParts = feedbackDate.split('/');
                const feedbackFormattedDate = new Date(`${feedbackDateParts[2]}-${feedbackDateParts[1]}-${feedbackDateParts[0]}`);

                const starsContainer = item.querySelector('.fixedStars');
                const checkedStars = starsContainer.querySelectorAll('.checked-star');
                const starCount = checkedStars.length;

                var showItem;
                if (starValue == "0")
                    showItem = username.includes(usernameValue) &&
                                 (!fromValue || feedbackFormattedDate >= new Date(fromValue)) &&
                                 (!toValue || feedbackFormattedDate <= new Date(toValue));
                else 
                    showItem = username.includes(usernameValue) && starCount === parseInt(starValue, 10) &&
                                 (!fromValue || feedbackFormattedDate >= new Date(fromValue)) &&
                                 (!toValue || feedbackFormattedDate <= new Date(toValue));

                item.style.display = showItem ? 'flex' : 'none';
            });
        };

        document.getElementById('inputFrom').addEventListener('input', filterFeedbacks);
        document.getElementById('inputTo').addEventListener('input', filterFeedbacks);
        document.getElementById('inputUsername').addEventListener('input', filterFeedbacks);
        document.getElementById('inputStar').addEventListener('input', filterFeedbacks);
    });
</script>